name: Unity Tests

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  testAllModes:
    name: Test run - ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        projectPath: [ "." ]
        unityVersion: [ "2019.4.31f1", "2020.3.19f1", "2021.1.23f1" ]
        include:
          - unityVersion: "2019.4.31f1"
            unityLicenseSecret: "UNITY_LICENSE_2019"
          - unityVersion: "2020.3.19f1"
            unityLicenseSecret: "UNITY_LICENSE"
          - unityVersion: "2021.1.23f1"
            unityLicenseSecret: "UNITY_LICENSE_2021"

    env:
      UNITY_LICENSE: ${{ secrets[matrix.unityLicenseSecret] }}
    
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Get Date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
        shell: bash
      - name: Cache Library
        uses: actions/cache@v2.1.1
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.unityVersion }}-${{ steps.get-date.outputs.date }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-${{ matrix.unityVersion }}-
            Library-${{ matrix.projectPath }}-
            Library-
      - run: ./scripts/coverageAssemblyFilters
        id: assemblyFilters
      - uses: game-ci/unity-test-runner@v2.0-alpha-6
        id: tests
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          testMode: editmode
          customParameters: -nographics -burst-disable-compilation -enableCodeCoverage -coverageOptions generateAdditionalMetrics;enableCyclomaticComplexity;assemblyFilters:${{ steps.assemblyFilters.outputs.result }}
      - name: Upload Test Results Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: Test results
          path: ${{ steps.tests.outputs.artifactsPath }}
      - name: Publish test results
        uses: rainbow-duck-games/unity-test-publisher@v0.2.4
        if: ${{ always() }} # Avoid skipping on failed tests
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: Test results - ${{ matrix.unityVersion }}
      - name: Upload Code Coverage Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: Code Coverage
          path: ./CodeCoverage
      - name: Upload PlayMode Test Coverage Report
        uses: codecov/codecov-action@v1
        with:
          flags: unittests
          file: ./CodeCoverage/workspace-opencov/PlayMode/TestCoverageResults_0000.xml
      - name: Upload EditMode Test Coverage Report
        uses: codecov/codecov-action@v1
        with:
          flags: unittests
          file: ./CodeCoverage/workspace-opencov/EditMode/TestCoverageResults_0000.xml
